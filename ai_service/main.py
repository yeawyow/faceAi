from insightface.app import FaceAnalysis
import aio_pika
import asyncio
import json
import numpy as np
from PIL import Image
import os

# р╣Вр╕лр╕ер╕Фр╣Вр╕бр╣Ар╕Фр╕е InsightFace
app = FaceAnalysis()
app.prepare(ctx_id=0, det_size=(640, 640))  # ctx_id=-1 р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕бр╕╡ GPU

async def on_message(message: aio_pika.IncomingMessage):
    async with message.process():
        try:
            payload = json.loads(message.body.decode())
            image_id = payload.get("imageId")
            image_path = payload.get("path")

            print(f"ЁЯУе р╕гр╕▒р╕Ър╕Зр╕▓р╕Щ: imageId={image_id}, path={image_path}")

            # р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕ар╕▓р╕Юр╕бр╕╡р╕нр╕вр╕╣р╣Ир╕Ир╕гр╕┤р╕З
            if not os.path.exists(image_path):
                print(f"тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Др╕Яр╕ер╣Мр╕ар╕▓р╕Юр╕Чр╕╡р╣И path: {image_path}")
                return

            # р╣Вр╕лр╕ер╕Фр╣Бр╕ер╕░р╣Бр╕Ыр╕ер╕Зр╕ар╕▓р╕Ю
            image = Image.open(image_path).convert("RGB")
            faces = app.get(np.array(image))

            print(f"ЁЯза imageId={image_id} р╣Ар╕Ир╕нр╣Гр╕Ър╕лр╕Щр╣Йр╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф: {len(faces)}")

            # >>> р╕Цр╣Йр╕▓р╕Др╕╕р╕Ур╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕Бр╕ер╕▒р╕Ър╕лр╕гр╕╖р╕нр╕Ър╕▒р╕Щр╕Чр╕╢р╕Б embedding р╣Гр╕лр╣Йр╣Ар╕Юр╕┤р╣Ир╕бр╕Хр╕гр╕Зр╕Щр╕╡р╣Й <<<

        except Exception as e:
            print(f"тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф imageId={payload.get('imageId')}: {str(e)}")

async def main():
    try:
        connection = await aio_pika.connect_robust(
            "amqp://skko:skkospiderman@rabbitmq/",
            heartbeat=60,
            timeout=60
        )
        channel = await connection.channel()
        queue = await channel.declare_queue("face_jobs", durable=True)
        await queue.consume(on_message)
        print("тЬЕ AI Service р╕Юр╕гр╣Йр╕нр╕бр╕Чр╕│р╕Зр╕▓р╕Щр╣Бр╕ер╣Йр╕з р╕гр╕нр╕гр╕▒р╕Ър╕Зр╕▓р╕Щ...")
        await asyncio.Future()  # р╕гр╕нр╣Др╕бр╣Ир╕кр╕┤р╣Йр╕Щр╕кр╕╕р╕Ф
    except Exception as e:
        print("тЭМ р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н RabbitMQ р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:", str(e))
